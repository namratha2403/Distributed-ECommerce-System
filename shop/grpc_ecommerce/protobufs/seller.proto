syntax = "proto3";

package ecommerce;

service Seller{
    rpc SellerLogin() returns (SellerLoginResponse);
    rpc SellerRegister() returns (SellerRegisterResponse);
    rpc SellerRatingView() returns (SellerRatingViewResponse);
    rpc SellerAddProducts() returns (SellerAddProductsResponse);
    rpc SellerUpdateProduct() returns (SellerUpdateProduct);
    rpc SellerDeleteProduct() returns (SellerDeleteProductResponse);
    rpc Sellerlogout() returns (SellerlogoutResponse);

}

message SellerRegisterResponse {
    int32 seller_id = 1;
    string seller_name = 2;
    string seller_username = 3;
    string seller_password = 4;
    string seller_password_confirm = 5;
}

message SellerLoginResponse {
    string status = 1;
}


message SellerRatingViewResponse {
    string rating = 1;
}


id = db.Column(db.Integer, primary_key=True)
name = db.Column(db.String(80), nullable=False)
price = db.Column(db.Numeric(10,2), nullable=False)
discount = db.Column(db.Integer, default=0)
stock = db.Column(db.Integer, nullable=False)
colors = db.Column(db.Text, nullable=False)
desc = db.Column(db.Text, nullable=False)
pub_date = db.Column(db.DateTime, nullable=False,default=datetime.utcnow)

category_id = db.Column(db.Integer, db.ForeignKey('category.id'),nullable=False)
category = db.relationship('Category',backref=db.backref('categories', lazy=True))

brand_id = db.Column(db.Integer, db.ForeignKey('brand.id'),nullable=False)
brand = db.relationship('Brand',backref=db.backref('brands', lazy=True))

image_1 = db.Column(db.String(150), nullable=False, default='image1.jpg')
image_2 = db.Column(db.String(150), nullable=False, default='image2.jpg')
image_3 = db.Column(db.String(150), nullable=False, default='image3.jpg')
