# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import seller_pb2 as seller__pb2


class SellerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SellerLogin = channel.unary_unary(
                '/ecommerce.Seller/SellerLogin',
                request_serializer=seller__pb2.SellerLoginRequest.SerializeToString,
                response_deserializer=seller__pb2.SellerLoginResponse.FromString,
                )
        self.SellerRegister = channel.unary_unary(
                '/ecommerce.Seller/SellerRegister',
                request_serializer=seller__pb2.SellerRegisterRequest.SerializeToString,
                response_deserializer=seller__pb2.SellerRegisterResponse.FromString,
                )
        self.SellerAddProducts = channel.unary_unary(
                '/ecommerce.Seller/SellerAddProducts',
                request_serializer=seller__pb2.SellerAddProductsRequest.SerializeToString,
                response_deserializer=seller__pb2.SellerAddProductsResponse.FromString,
                )
        self.SellerUpdateProduct = channel.unary_unary(
                '/ecommerce.Seller/SellerUpdateProduct',
                request_serializer=seller__pb2.SellerUpdateProductRequest.SerializeToString,
                response_deserializer=seller__pb2.SellerUpdateProductResponse.FromString,
                )
        self.SellerDeleteProduct = channel.unary_unary(
                '/ecommerce.Seller/SellerDeleteProduct',
                request_serializer=seller__pb2.SellerDeleteProductRequest.SerializeToString,
                response_deserializer=seller__pb2.SellerDeleteProductResponse.FromString,
                )
        self.Sellerlogout = channel.unary_unary(
                '/ecommerce.Seller/Sellerlogout',
                request_serializer=seller__pb2.SellerlogoutRequest.SerializeToString,
                response_deserializer=seller__pb2.SellerlogoutResponse.FromString,
                )


class SellerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SellerLogin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellerRegister(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellerAddProducts(self, request, context):
        """rpc SellerRatingView(SellerRatingViewRequest) returns (SellerRatingViewResponse);
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellerUpdateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellerDeleteProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Sellerlogout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SellerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SellerLogin': grpc.unary_unary_rpc_method_handler(
                    servicer.SellerLogin,
                    request_deserializer=seller__pb2.SellerLoginRequest.FromString,
                    response_serializer=seller__pb2.SellerLoginResponse.SerializeToString,
            ),
            'SellerRegister': grpc.unary_unary_rpc_method_handler(
                    servicer.SellerRegister,
                    request_deserializer=seller__pb2.SellerRegisterRequest.FromString,
                    response_serializer=seller__pb2.SellerRegisterResponse.SerializeToString,
            ),
            'SellerAddProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.SellerAddProducts,
                    request_deserializer=seller__pb2.SellerAddProductsRequest.FromString,
                    response_serializer=seller__pb2.SellerAddProductsResponse.SerializeToString,
            ),
            'SellerUpdateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.SellerUpdateProduct,
                    request_deserializer=seller__pb2.SellerUpdateProductRequest.FromString,
                    response_serializer=seller__pb2.SellerUpdateProductResponse.SerializeToString,
            ),
            'SellerDeleteProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.SellerDeleteProduct,
                    request_deserializer=seller__pb2.SellerDeleteProductRequest.FromString,
                    response_serializer=seller__pb2.SellerDeleteProductResponse.SerializeToString,
            ),
            'Sellerlogout': grpc.unary_unary_rpc_method_handler(
                    servicer.Sellerlogout,
                    request_deserializer=seller__pb2.SellerlogoutRequest.FromString,
                    response_serializer=seller__pb2.SellerlogoutResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ecommerce.Seller', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Seller(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SellerLogin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ecommerce.Seller/SellerLogin',
            seller__pb2.SellerLoginRequest.SerializeToString,
            seller__pb2.SellerLoginResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellerRegister(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ecommerce.Seller/SellerRegister',
            seller__pb2.SellerRegisterRequest.SerializeToString,
            seller__pb2.SellerRegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellerAddProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ecommerce.Seller/SellerAddProducts',
            seller__pb2.SellerAddProductsRequest.SerializeToString,
            seller__pb2.SellerAddProductsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellerUpdateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ecommerce.Seller/SellerUpdateProduct',
            seller__pb2.SellerUpdateProductRequest.SerializeToString,
            seller__pb2.SellerUpdateProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellerDeleteProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ecommerce.Seller/SellerDeleteProduct',
            seller__pb2.SellerDeleteProductRequest.SerializeToString,
            seller__pb2.SellerDeleteProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Sellerlogout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ecommerce.Seller/Sellerlogout',
            seller__pb2.SellerlogoutRequest.SerializeToString,
            seller__pb2.SellerlogoutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
